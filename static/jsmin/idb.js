(()=>{if(window.indexedDB){class e{constructor(e="WebCache",t="KeyStore"){this.storeName=t,this._dbase=new Promise((o,r)=>{const n=indexedDB.open(e,1);n.onerror=(()=>{r(n.error)}),n.onsuccess=(()=>{o(n.result)}),n.onupgradeneeded=(()=>{n.result.createObjectStore(t)})})}__IDBAct__(e,t){return this._dbase.then(o=>new Promise((r,n)=>{const s=o.transaction(this.storeName,e);s.oncomplete=(()=>r()),s.onabort=s.onerror=(()=>n()),t(s.objectStore(this.storeName))}))}}let t;const o=()=>t||new e;window.$get=((e,t=o())=>{let r;return t.__IDBAct__("readonly",t=>{r=t.get(e)}).then(()=>r.result)}),window.$set=((e,t,r=o())=>r.__IDBAct__("readwrite",o=>{o.put(t,e)})),window.$del=((e,t=o())=>t.__IDBAct__("readwrite",t=>{t.delete(e)})),window.$__clear__=((e=o())=>(console.warn("clearing Store:",e),e.__IDBAct__("readwrite",e=>{e.clear()}))),window.$keys=((e=o())=>{const t=[];return e.__IDBAct__("readonly",e=>{(e.openKeyCursor||e.openCursor).call(e).onsuccess=function(){this.result&&(t.push(this.result.key),this.result.continue())}}).then(()=>t)})}else{const e=async()=>void 0;window.$get=window.$set=window.$keys=window.$__clear__=window.$del=e}})();