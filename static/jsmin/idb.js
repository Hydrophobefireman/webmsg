(()=>{if(window.indexedDB){class e{constructor(e="WebCache",t="KeyStore"){this.storeName=t,this._dbase=new Promise((r,n)=>{const o=indexedDB.open(e,1);o.onerror=(()=>{r(null)}),o.onsuccess=(()=>{r(o.result)}),o.onupgradeneeded=(()=>{o.result.createObjectStore(t)})})}__IDBAct__(e,t){return this._dbase.then(r=>new Promise((n,o)=>{const s=r.transaction(this.storeName,e);s.oncomplete=(()=>n()),s.onabort=s.onerror=(()=>o()),t(s.objectStore(this.storeName))})).catch(e=>null)}}let t;const r=()=>t||new e;window.$get=((e,t=r())=>{let n;return t.__IDBAct__("readonly",t=>{n=t.get(e)}).then(()=>n.result).catch(e=>null)}),window.$set=((e,t,n=r())=>{try{return n.__IDBAct__("readwrite",r=>{r.put(t,e)})}catch(e){return null}}),window.$del=((e,t=r())=>{try{t.__IDBAct__("readwrite",t=>{t.delete(e)})}catch(e){return null}}),window.$__clear__=((e=r())=>{try{return console.warn("clearing Store:",e),e.__IDBAct__("readwrite",e=>{e.clear()})}catch(e){return e}}),window.$keys=((e=r())=>{const t=[];return e.__IDBAct__("readonly",e=>{(e.openKeyCursor||e.openCursor).call(e).onsuccess=function(){this.result&&(t.push(this.result.key),this.result.continue())}}).then(()=>t).catch(e=>null)})}else{const e=async()=>void 0;window.$get=window.$set=window.$keys=window.$__clear__=window.$del=e}})();